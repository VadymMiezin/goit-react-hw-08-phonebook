{"version":3,"file":"static/js/141.25dafab9.chunk.js","mappings":"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","sources":["../node_modules/nanoid/index.browser.js","components/Filter/Filter.styled.jsx","redux/filter/selectors.js","components/Filter/Filter.jsx","../node_modules/reselect/es/defaultMemoize.js","../node_modules/reselect/es/index.js","redux/contacts/selectors.js","components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","pages/Contacts.jsx"],"sourcesContent":["export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n","import styled from '@emotion/styled';\n\nexport const Wrapper = styled.div`\n  margin: 20px auto 30px auto;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: space-between;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 5px;\n  margin-bottom: 10px;\n  color: #0d4ba0;\n  font-size: 24px;\n`;\n\nexport const Input = styled.input`\n  padding: 5px;\n  border: 3px solid #0d4ba0;\n  color: #0d4ba0;\n  border-radius: 5px;\n  outline: none;\n`;\n","export const selectFilter = state => state.filter;\n","import { Label, Input, Wrapper } from './Filter.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectFilter } from 'redux/filter/selectors';\nimport { setFilter } from 'redux/filter/filterSlice';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectFilter);\n\n  const onFilterChange = e => {\n    const { value } = e.target;\n\n    dispatch(setFilter(value));\n  };\n\n  return (\n    <Wrapper>\n      <Label>\n        Find contacts by name\n        <Input\n          type=\"text\"\n          name=\"filter\"\n          onChange={onFilterChange}\n          value={filter}\n        />\n      </Label>\n    </Wrapper>\n  );\n};\n","// Cache implementation based on Erik Rasmussen's `lru-memoize`:\n// https://github.com/erikras/lru-memoize\nvar NOT_FOUND = 'NOT_FOUND';\n\nfunction createSingletonCache(equals) {\n  var entry;\n  return {\n    get: function get(key) {\n      if (entry && equals(entry.key, key)) {\n        return entry.value;\n      }\n\n      return NOT_FOUND;\n    },\n    put: function put(key, value) {\n      entry = {\n        key: key,\n        value: value\n      };\n    },\n    getEntries: function getEntries() {\n      return entry ? [entry] : [];\n    },\n    clear: function clear() {\n      entry = undefined;\n    }\n  };\n}\n\nfunction createLruCache(maxSize, equals) {\n  var entries = [];\n\n  function get(key) {\n    var cacheIndex = entries.findIndex(function (entry) {\n      return equals(key, entry.key);\n    }); // We found a cached entry\n\n    if (cacheIndex > -1) {\n      var entry = entries[cacheIndex]; // Cached entry not at top of cache, move it to the top\n\n      if (cacheIndex > 0) {\n        entries.splice(cacheIndex, 1);\n        entries.unshift(entry);\n      }\n\n      return entry.value;\n    } // No entry found in cache, return sentinel\n\n\n    return NOT_FOUND;\n  }\n\n  function put(key, value) {\n    if (get(key) === NOT_FOUND) {\n      // TODO Is unshift slow?\n      entries.unshift({\n        key: key,\n        value: value\n      });\n\n      if (entries.length > maxSize) {\n        entries.pop();\n      }\n    }\n  }\n\n  function getEntries() {\n    return entries;\n  }\n\n  function clear() {\n    entries = [];\n  }\n\n  return {\n    get: get,\n    put: put,\n    getEntries: getEntries,\n    clear: clear\n  };\n}\n\nexport var defaultEqualityCheck = function defaultEqualityCheck(a, b) {\n  return a === b;\n};\nexport function createCacheKeyComparator(equalityCheck) {\n  return function areArgumentsShallowlyEqual(prev, next) {\n    if (prev === null || next === null || prev.length !== next.length) {\n      return false;\n    } // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n\n\n    var length = prev.length;\n\n    for (var i = 0; i < length; i++) {\n      if (!equalityCheck(prev[i], next[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n}\n// defaultMemoize now supports a configurable cache size with LRU behavior,\n// and optional comparison of the result value with existing values\nexport function defaultMemoize(func, equalityCheckOrOptions) {\n  var providedOptions = typeof equalityCheckOrOptions === 'object' ? equalityCheckOrOptions : {\n    equalityCheck: equalityCheckOrOptions\n  };\n  var _providedOptions$equa = providedOptions.equalityCheck,\n      equalityCheck = _providedOptions$equa === void 0 ? defaultEqualityCheck : _providedOptions$equa,\n      _providedOptions$maxS = providedOptions.maxSize,\n      maxSize = _providedOptions$maxS === void 0 ? 1 : _providedOptions$maxS,\n      resultEqualityCheck = providedOptions.resultEqualityCheck;\n  var comparator = createCacheKeyComparator(equalityCheck);\n  var cache = maxSize === 1 ? createSingletonCache(comparator) : createLruCache(maxSize, comparator); // we reference arguments instead of spreading them for performance reasons\n\n  function memoized() {\n    var value = cache.get(arguments);\n\n    if (value === NOT_FOUND) {\n      // @ts-ignore\n      value = func.apply(null, arguments);\n\n      if (resultEqualityCheck) {\n        var entries = cache.getEntries();\n        var matchingEntry = entries.find(function (entry) {\n          return resultEqualityCheck(entry.value, value);\n        });\n\n        if (matchingEntry) {\n          value = matchingEntry.value;\n        }\n      }\n\n      cache.put(arguments, value);\n    }\n\n    return value;\n  }\n\n  memoized.clearCache = function () {\n    return cache.clear();\n  };\n\n  return memoized;\n}","import { defaultMemoize, defaultEqualityCheck } from './defaultMemoize';\nexport { defaultMemoize, defaultEqualityCheck };\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep === 'function' ? \"function \" + (dep.name || 'unnamed') + \"()\" : typeof dep;\n    }).join(', ');\n    throw new Error(\"createSelector expects all input-selectors to be functions, but received the following types: [\" + dependencyTypes + \"]\");\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptionsFromArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptionsFromArgs[_key - 1] = arguments[_key];\n  }\n\n  var createSelector = function createSelector() {\n    for (var _len2 = arguments.length, funcs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var _recomputations = 0;\n\n    var _lastResult; // Due to the intricacies of rest params, we can't do an optional arg after `...funcs`.\n    // So, start by declaring the default value here.\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\n\n\n    var directlyPassedOptions = {\n      memoizeOptions: undefined\n    }; // Normally, the result func or \"output selector\" is the last arg\n\n    var resultFunc = funcs.pop(); // If the result func is actually an _object_, assume it's our options object\n\n    if (typeof resultFunc === 'object') {\n      directlyPassedOptions = resultFunc; // and pop the real result func off\n\n      resultFunc = funcs.pop();\n    }\n\n    if (typeof resultFunc !== 'function') {\n      throw new Error(\"createSelector expects an output function after the inputs, but received: [\" + typeof resultFunc + \"]\");\n    } // Determine which set of options we're using. Prefer options passed directly,\n    // but fall back to options given to createSelectorCreator.\n\n\n    var _directlyPassedOption = directlyPassedOptions,\n        _directlyPassedOption2 = _directlyPassedOption.memoizeOptions,\n        memoizeOptions = _directlyPassedOption2 === void 0 ? memoizeOptionsFromArgs : _directlyPassedOption2; // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\n    // is an array. In most libs I've looked at, it's an equality function or options object.\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\n    // we wrap it in an array so we can apply it.\n\n    var finalMemoizeOptions = Array.isArray(memoizeOptions) ? memoizeOptions : [memoizeOptions];\n    var dependencies = getDependencies(funcs);\n    var memoizedResultFunc = memoize.apply(void 0, [function recomputationWrapper() {\n      _recomputations++; // apply arguments instead of spreading for performance.\n\n      return resultFunc.apply(null, arguments);\n    }].concat(finalMemoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n\n    var selector = memoize(function dependenciesChecker() {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        // @ts-ignore\n        params.push(dependencies[i].apply(null, arguments));\n      } // apply arguments instead of spreading for performance.\n\n\n      _lastResult = memoizedResultFunc.apply(null, params);\n      return _lastResult;\n    });\n    Object.assign(selector, {\n      resultFunc: resultFunc,\n      memoizedResultFunc: memoizedResultFunc,\n      dependencies: dependencies,\n      lastResult: function lastResult() {\n        return _lastResult;\n      },\n      recomputations: function recomputations() {\n        return _recomputations;\n      },\n      resetRecomputations: function resetRecomputations() {\n        return _recomputations = 0;\n      }\n    });\n    return selector;\n  }; // @ts-ignore\n\n\n  return createSelector;\n}\nexport var createSelector = /* #__PURE__ */createSelectorCreator(defaultMemoize);\n// Manual definition of state and output arguments\nexport var createStructuredSelector = function createStructuredSelector(selectors, selectorCreator) {\n  if (selectorCreator === void 0) {\n    selectorCreator = createSelector;\n  }\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + (\"where each property is a selector, instead received a \" + typeof selectors));\n  }\n\n  var objectKeys = Object.keys(selectors);\n  var resultSelector = selectorCreator( // @ts-ignore\n  objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n  return resultSelector;\n};","import { createSelector } from '@reduxjs/toolkit';\nimport { selectFilter } from 'redux/filter/selectors';\n\nexport const selectLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\nexport const selectContacts = state => state.contacts.items;\n\nexport const selectFilteredContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);\n","import styled from '@emotion/styled';\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  width: 400px;\n  padding: 12px;\n  background-color: #ffc40c;\n  border: 3px solid #0d4ba0;\n  border-radius: 4px;\n  margin: 0 auto;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 16px;\n  color: #0d4ba0;\n  font-size: 20px;\n`;\n\nexport const Input = styled.input`\n  color: #0d4ba0;\n  padding: 8px 12px;\n  font: inherit;\n  cursor: pointer;\n  outline: none;\n`;\n\nexport const Btn = styled.button`\n  padding: 8px 12px;\n  font: inherit;\n  cursor: pointer;\n  border-radius: 4px;\n  border: 3px solid #0d4ba0;\n  color: #0d4ba0;\n  background-color: #ffffff;\n  font-size: 20px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  &:hover {\n    background-color: #0d4ba0;\n    color: #ffffff;\n  }\n`;\n","import { useState } from 'react';\nimport { nanoid } from 'nanoid';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Filter } from 'components/Filter/Filter';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport { addContacts } from 'redux/contacts/operations';\nimport { Form, Label, Input, Btn } from './ContactForm.styled';\n\nconst nameId = nanoid();\nconst numberId = nanoid();\n\nexport const ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const handleChange = ({ target }) => {\n    const { name, value } = target;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    const existingContact = contacts.some(\n      contact => contact.name.toLowerCase() === name.toLowerCase()\n    );\n\n    if (existingContact) {\n      alert(`Contact with name ${name} is already exists`);\n      return;\n    }\n\n    const newContact = {\n      name,\n      number,\n    };\n\n    dispatch(addContacts(newContact));\n\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <>\n      <Form onSubmit={handleSubmit}>\n        <Label htmlFor={nameId}>\n          Name\n          <Input\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n            onChange={handleChange}\n            value={name}\n          />\n        </Label>\n\n        <Label htmlFor={numberId}>\n          Number\n          <Input\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[ .\\-\\s]?\\(?\\d{1,3}?\\)?[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n            onChange={handleChange}\n            value={number}\n          />\n        </Label>\n\n        <Btn type=\"submit\">Add contact</Btn>\n      </Form>\n      <Filter />\n    </>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const Title = styled.h2`\n  font-size: 32px;\n  color: #0d4ba0;\n  display: flex;\n  justify-content: center;\n`;\n\nexport const List = styled.ul`\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  width: 400px;\n  padding: 12px;\n  border-radius: 4px;\n  background-color: #ffc40c;\n  border: 3px solid #0d4ba0;\n  margin: 0 auto;\n`;\n\nexport const Item = styled.li`\n  background-color: #ffffff;\n  border: 3px solid #0d4ba0;\n  color: #0d4ba0;\n  padding: 10px;\n  border-radius: 4px;\n  margin-bottom: 5px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  font-size: 20px;\n`;\n\nexport const Btn = styled.button`\n  padding: 4px 8px;\n  font: inherit;\n  cursor: pointer;\n  border-radius: 4px 8px;\n  border: 3px solid #ff4c4c;\n  color: #ffffff;\n  background-color: #ff0000;\n  display: flex;\n  align-items: center;\n\n  &:hover {\n    background-color: #cc0000;\n  }\n`;\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectFilteredContacts } from 'redux/contacts/selectors';\nimport { deleteContacts } from 'redux/contacts/operations';\nimport { List, Item, Btn, Title } from './ContactList.styled';\n\nexport const ContactList = () => {\n  const contacts = useSelector(selectFilteredContacts);\n  const dispatch = useDispatch();\n\n  return (\n    <>\n      <Title>Contacts</Title>\n      <List>\n        {contacts.map(contact => (\n          <Item key={contact.id}>\n            {contact.name + ' : ' + contact.number}\n            {\n              <Btn\n                type=\"button\"\n                name=\"delete\"\n                onClick={() => dispatch(deleteContacts(contact.id))}\n              >\n                Delete\n              </Btn>\n            }\n          </Item>\n        ))}\n      </List>\n    </>\n  );\n};\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { selectLoading } from 'redux/contacts/selectors';\nimport { Loader } from 'components/Loader/Loader';\n\nexport default function Tasks() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <title>Contacts</title>\n      <ContactForm />\n      <div>{isLoading && <Loader />}</div>\n      <ContactList />\n    </>\n  );\n}\n"],"names":["nanoid","size","arguments","length","undefined","crypto","getRandomValues","Uint8Array","reduce","id","byte","toString","toUpperCase","Wrapper","styled","_templateObject","_taggedTemplateLiteral","Label","_templateObject2","Input","_templateObject3","selectFilter","state","filter","Filter","dispatch","useDispatch","useSelector","_jsx","children","_jsxs","type","name","onChange","e","value","target","setFilter","NOT_FOUND","defaultEqualityCheck","a","b","defaultMemoize","func","equalityCheckOrOptions","providedOptions","equalityCheck","_providedOptions$equa","_providedOptions$maxS","maxSize","resultEqualityCheck","comparator","prev","next","i","createCacheKeyComparator","cache","equals","entry","get","key","put","getEntries","clear","createSingletonCache","entries","cacheIndex","findIndex","splice","unshift","pop","createLruCache","memoized","apply","matchingEntry","find","clearCache","getDependencies","funcs","dependencies","Array","isArray","every","dep","dependencyTypes","map","join","Error","createSelectorCreator","memoize","_len","memoizeOptionsFromArgs","_key","createSelector","_len2","_key2","_lastResult","_recomputations","directlyPassedOptions","memoizeOptions","resultFunc","_directlyPassedOption","_directlyPassedOption2","finalMemoizeOptions","memoizedResultFunc","concat","selector","params","push","Object","assign","lastResult","recomputations","resetRecomputations","selectLoading","contacts","isLoading","selectContacts","items","selectFilteredContacts","contact","toLowerCase","includes","Form","Btn","_templateObject4","nameId","numberId","ContactForm","_useState","useState","_useState2","_slicedToArray","setName","_useState3","_useState4","number","setNumber","handleChange","_ref","reset","_Fragment","onSubmit","preventDefault","some","alert","newContact","addContacts","htmlFor","pattern","title","required","Title","List","Item","ContactList","onClick","deleteContacts","Tasks","useEffect","fetchContacts","Loader"],"sourceRoot":""}